{
    "sourceFile": "Develop/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1637038011201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1637071751580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+//     display password\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637071832152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+//     display password\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = \"password\"\n+  //generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637072095437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword() {\n+  var generatedPassword = \"this is what we print\";\n+  return(generatePassword);\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637072480292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword() {\n+  var generatedPassword = \"this is what we print\";\n+  return generatePassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637072522191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword() {\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637072588038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637073205720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+/* \t        \n+            BASIC UTILITY: generate random number between two numbers */\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.random();\n+  return x;\n+}            \n+\n+            /*\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637073300850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.random();\n+  return x;\n+}            \n+\n+            /*\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637073453793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+            /*\n+            function for pulling from list\n+                get length of this array\n+                get a random number based on length\n+                pull from the array\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637074304028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var anarray = [a,b,c,d,e]\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// function for pulling a value at random from an array\n+var getRandomElementFrom = function(array) {\n+  var lastElementValue = arrayLength(array) - 1;\n+  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n+  return array[selectedValue];\n+}\n+                // get length of this array\n+                // get a random number based on length\n+                // pull from the array\n+            \n+            /*\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637074811528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var anarray = [a,b,c,d,e]\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// function for pulling a value at random from an array\n+var getRandomElementFrom = function(array) {\n+  var lastElementValue = arrayLength(array) - 1;\n+  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n+  return array[selectedValue];\n+}\n+                // get length of this array\n+                // get a random number based on length\n+                // pull from the array\n+            \n+            /*\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637074886076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// function for pulling a value at random from an array\n+var getRandomElementFrom = function(array) {\n+  var lastElementValue = arrayLength(array) - 1;\n+  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n+  return array[selectedValue];\n+}\n+                // get length of this array\n+                // get a random number based on length\n+                // pull from the array\n+            \n+            /*\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637075424016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// function for pulling a value at random from an array\n+var getRandomElementFrom = function(array) {\n+  var lastElementValue = array.length - 1;\n+  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n+  return array[selectedValue];\n+}\n+                // get length of this array\n+                // get a random number based on length\n+                // pull from the array\n+            \n+            /*\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637075736048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// function for pulling a value at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+                // get length of this array\n+                // get a random number based on length\n+                // pull from the array\n+            \n+            /*\n+            function for shuffling\n+                set up array to be scrambled\n+                get a random number in length of array\n+                pull out that location in the array\n+                    send out that value\n+                    remove that value from the array\n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions\n+                number of characters\n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+welcome user\n+how long a password\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637077250784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n+// subtract number of required from total\n+// fill those at random\n+// squeeze in required using splice\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637077378648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+// //    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+// // SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n+// // subtract number of required from total\n+// // fill those at random\n+// // squeeze in required using splice\n+\n+//             /*\n+          \n+//             BASIC VAR: arrays of password characters\n+//               a-z ; A-Z ; 0-9 ; special characters list\n+//               allowable answers for questions [ , error message, allowable values]\n+//                 number of characters \n+//                 yes or not\n+//                 at least one of the types of characters\n+        \n+              \n+\n+\n+// how long a password - obtainAndValidate\n+//     reject bad answers\n+//         quit if necessary\n+// what are required characters\n+//     lowercase\n+//     uppercase\n+//     numbers?\n+//         reject bad answers\n+//             quit\n+//     special characters?\n+//         reject\n+//             quit\n+// generate password\n+//     set up parameters\n+//         length of password\n+//         requirements of password\n+//     fill in required characters first\n+//     fill in remaining characters using whole list\n+//     shuffle the array\n+// present password\n+    \n+// var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+//     if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+// var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+// window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+//     */\n+\n+\n+\n+// // Assignment code here\n+\n+// //     get criteria\n+// //     generate password\n+// var generatePassword = function() {\n+//   // fill in required characters first\n+//   //   fill in remaining characters using whole list\n+//   var generatedPassword = \"this is what we print\";\n+//   return generatedPassword;\n+// }\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637077561939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+var anarray = ['a','b','c','d','e']\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n+// subtract number of required from total\n+// fill those at random\n+// squeeze in required using splice\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    reject bad answers\n+        quit if necessary\n+what are required characters\n+    lowercase\n+    uppercase\n+    numbers?\n+        reject bad answers\n+            quit\n+    special characters?\n+        reject\n+            quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+    fill in required characters first\n+    fill in remaining characters using whole list\n+    shuffle the array\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637163911379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n+// subtract number of required from total\n+// fill those at random\n+// squeeze in required using splice\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637164527121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+var characterSet = [];\n+var passwordArray = [];\n+var passwordString = \"\";\n+\n+var resetVariables = function() {\n+  characterSet = [];\n+  passwordArray = [];\n+  passwordString = \"\";\n+}\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n+// subtract number of required from total\n+// fill those at random\n+// squeeze in required using splice\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637165260005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+var characterSet = [];\n+var passwordArray = [];\n+var passwordString = \"\";\n+\n+var resetVariables = function() {\n+  characterSet = [];\n+  passwordArray = [];\n+  passwordString = \"\";\n+}\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+// splice in random location\n+var spliceValueAtRandomIndex = function(value, array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  let array = array.splice(randomIndex, 0, value);\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637165295663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+var characterSet = [];\n+var passwordArray = [];\n+var passwordString = \"\";\n+\n+var resetVariables = function() {\n+  let characterSet = [];\n+  let passwordArray = [];\n+  let passwordString = \"\";\n+}\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+// splice in random location\n+var spliceValueAtRandomIndex = function(value, array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  let array = array.splice(randomIndex, 0, value);\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637165388226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+var characterSet = [];\n+var passwordArray = [];\n+var passwordString = \"\";\n+\n+var resetVariables = function() {\n+  characterSet = [];\n+  passwordArray = [];\n+  passwordString = \"\";\n+}\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+// splice in random location\n+var spliceValueAtRandomIndex = function(value, array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  array = array.splice(randomIndex, 0, value);\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637165570227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+var anarray = ['a','b','c','d','e']\n+\n+var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n+var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n+var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n+var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n+\n+var characterSet = [];\n+var passwordArray = [];\n+var passwordString = \"\";\n+\n+var resetVariables = function() {\n+  characterSet = [];\n+  passwordArray = [];\n+  passwordString = \"\";\n+}\n+\n+// generates random number between two numbers, inclusive\n+var getRandomNumberFromTo = function(min, max) {\n+  var x = Math.floor(Math.random() * (max - min + 1) + min);\n+  return x;\n+}            \n+\n+// pulls an element at random from an array\n+var getRandomElementFromArray = function(array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  return array[randomIndex];\n+}\n+// splice in random location\n+var spliceValueAtRandomIndex = function(value, array) {\n+  var lastElementIndex = array.length - 1;\n+  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n+  array = array.splice(randomIndex, 0, value);\n+}\n+\n+//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n+//    try to do one function that can handle number range, yes/no, and selected at least one?\n+\n+\n+            /*\n+          \n+            BASIC VAR: arrays of password characters\n+              a-z ; A-Z ; 0-9 ; special characters list\n+              allowable answers for questions [ , error message, allowable values]\n+                number of characters \n+                yes or not\n+                at least one of the types of characters\n+        \n+              \n+\n+\n+how long a password - obtainAndValidate\n+    validate or quit\n+what are required characters\n+    lowercase\n+      validate or quit\n+      uppercase\n+      validate or quit\n+      numbers?\n+      validate or quit\n+      special characters?\n+      validate or quit\n+      at least one selected\n+       if not, go back to start or quit\n+generate password\n+    set up parameters\n+        length of password\n+        requirements of password\n+      fill in (length - required) characters using whole list\n+      splice in required characters at random locations\n+present password\n+    \n+var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n+    if (promptFight === 'skip' || promptFight === 'SKIP') {\n+    \n+var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n+\n+window.alert(\"This is an alert! JavaScript is running!\");\n+      \n+\n+    */\n+\n+\n+\n+// Assignment code here\n+\n+//     get criteria\n+//     generate password\n+var generatePassword = function() {\n+  // fill in required characters first\n+  //   fill in remaining characters using whole list\n+  var generatedPassword = \"this is what we print\";\n+  return generatedPassword;\n+}\n+  \n+// Get references to the #generate element\n+var generateBtn = document.querySelector(\"#generate\");\n+\n+// Write password to the #password input\n+function writePassword() {\n+  var password = generatePassword();\n+  var passwordText = document.querySelector(\"#password\");\n+\n+  passwordText.value = password;\n+\n+}\n+\n+// Add event listener to generate button\n+generateBtn.addEventListener(\"click\", writePassword);\n"
                },
                {
                    "date": 1637165903055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,118 +4,11 @@\n var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n \n-var characterSet = [];\n-var passwordArray = [];\n-var passwordString = \"\";\n+// This array tracks which types to include as follows: lower case, upper case, numbers, and specials\n+var typesOfCharactersToInclude = [false,false,false,false];\n \n-var resetVariables = function() {\n-  characterSet = [];\n-  passwordArray = [];\n-  passwordString = \"\";\n-}\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-// splice in random location\n-var spliceValueAtRandomIndex = function(value, array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  array = array.splice(randomIndex, 0, value);\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    validate or quit\n-what are required characters\n-    lowercase\n-      validate or quit\n-      uppercase\n-      validate or quit\n-      numbers?\n-      validate or quit\n-      special characters?\n-      validate or quit\n-      at least one selected\n-       if not, go back to start or quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-      fill in (length - required) characters using whole list\n-      splice in required characters at random locations\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n-var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n-var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n-var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n-\n var characterSet = [];\n var passwordArray = [];\n var passwordString = \"\";\n \n@@ -143,118 +36,10 @@\n   var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n   array = array.splice(randomIndex, 0, value);\n }\n \n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n+// \n \n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    validate or quit\n-what are required characters\n-    lowercase\n-      validate or quit\n-      uppercase\n-      validate or quit\n-      numbers?\n-      validate or quit\n-      special characters?\n-      validate or quit\n-      at least one selected\n-       if not, go back to start or quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-      fill in (length - required) characters using whole list\n-      splice in required characters at random locations\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n-var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n-var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n-var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n-\n-var characterSet = [];\n-var passwordArray = [];\n-var passwordString = \"\";\n-\n-var resetVariables = function() {\n-  let characterSet = [];\n-  let passwordArray = [];\n-  let passwordString = \"\";\n-}\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-// splice in random location\n-var spliceValueAtRandomIndex = function(value, array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  let array = array.splice(randomIndex, 0, value);\n-}\n-\n //obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n //    try to do one function that can handle number range, yes/no, and selected at least one?\n \n \n@@ -327,1878 +112,4 @@\n }\n \n // Add event listener to generate button\n generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n-var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n-var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n-var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n-\n-var characterSet = [];\n-var passwordArray = [];\n-var passwordString = \"\";\n-\n-var resetVariables = function() {\n-  characterSet = [];\n-  passwordArray = [];\n-  passwordString = \"\";\n-}\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-// splice in random location\n-var spliceValueAtRandomIndex = function(value, array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  let array = array.splice(randomIndex, 0, value);\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    validate or quit\n-what are required characters\n-    lowercase\n-      validate or quit\n-      uppercase\n-      validate or quit\n-      numbers?\n-      validate or quit\n-      special characters?\n-      validate or quit\n-      at least one selected\n-       if not, go back to start or quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-      fill in (length - required) characters using whole list\n-      splice in required characters at random locations\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n-var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n-var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n-var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n-\n-var characterSet = [];\n-var passwordArray = [];\n-var passwordString = \"\";\n-\n-var resetVariables = function() {\n-  characterSet = [];\n-  passwordArray = [];\n-  passwordString = \"\";\n-}\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n-// subtract number of required from total\n-// fill those at random\n-// squeeze in required using splice\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    validate or quit\n-what are required characters\n-    lowercase\n-      validate or quit\n-      uppercase\n-      validate or quit\n-      numbers?\n-      validate or quit\n-      special characters?\n-      validate or quit\n-      at least one selected\n-       if not, go back to start or quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-      fill in (length - required) characters using whole list\n-      splice in required characters at random locations\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-var lowerCaseLetters = [ 'a', 'b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's','t', 'u', 'v', 'w', 'x', 'y', 'z'];\n-var upperCaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n-var numbersZeroToNine = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n-var specialCharacters = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '+', '-', '.', '~', '|', '<', '>', '=', '-', '_'];\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n-// subtract number of required from total\n-// fill those at random\n-// squeeze in required using splice\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    validate or quit\n-what are required characters\n-    lowercase\n-      validate or quit\n-      uppercase\n-      validate or quit\n-      numbers?\n-      validate or quit\n-      special characters?\n-      validate or quit\n-      at least one selected\n-       if not, go back to start or quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-      fill in (length - required) characters using whole list\n-      splice in required characters at random locations\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n-// subtract number of required from total\n-// fill those at random\n-// squeeze in required using splice\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-// //    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-// // SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n-// // subtract number of required from total\n-// // fill those at random\n-// // squeeze in required using splice\n-\n-//             /*\n-          \n-//             BASIC VAR: arrays of password characters\n-//               a-z ; A-Z ; 0-9 ; special characters list\n-//               allowable answers for questions [ , error message, allowable values]\n-//                 number of characters \n-//                 yes or not\n-//                 at least one of the types of characters\n-        \n-              \n-\n-\n-// how long a password - obtainAndValidate\n-//     reject bad answers\n-//         quit if necessary\n-// what are required characters\n-//     lowercase\n-//     uppercase\n-//     numbers?\n-//         reject bad answers\n-//             quit\n-//     special characters?\n-//         reject\n-//             quit\n-// generate password\n-//     set up parameters\n-//         length of password\n-//         requirements of password\n-//     fill in required characters first\n-//     fill in remaining characters using whole list\n-//     shuffle the array\n-// present password\n-    \n-// var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-//     if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-// var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-// window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-//     */\n-\n-\n-\n-// // Assignment code here\n-\n-// //     get criteria\n-// //     generate password\n-// var generatePassword = function() {\n-//   // fill in required characters first\n-//   //   fill in remaining characters using whole list\n-//   var generatedPassword = \"this is what we print\";\n-//   return generatedPassword;\n-// }\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// pulls an element at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-\n-//obtainValidatedResponseOrQuit - uses allowable answers array to validate them\n-//    try to do one function that can handle number range, yes/no, and selected at least one?\n-\n-// SKIP FUNCTION - this adds required values into the target array and makes sure they don't get overwritten\n-// subtract number of required from total\n-// fill those at random\n-// squeeze in required using splice\n-\n-            /*\n-          \n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions [ , error message, allowable values]\n-                number of characters \n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-how long a password - obtainAndValidate\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// function for pulling a value at random from an array\n-var getRandomElementFromArray = function(array) {\n-  var lastElementIndex = array.length - 1;\n-  var randomIndex = getRandomNumberFromTo(0, lastElementIndex);\n-  return array[randomIndex];\n-}\n-                // get length of this array\n-                // get a random number based on length\n-                // pull from the array\n-            \n-            /*\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// function for pulling a value at random from an array\n-var getRandomElementFrom = function(array) {\n-  var lastElementValue = array.length - 1;\n-  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n-  return array[selectedValue];\n-}\n-                // get length of this array\n-                // get a random number based on length\n-                // pull from the array\n-            \n-            /*\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = ['a','b','c','d','e']\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// function for pulling a value at random from an array\n-var getRandomElementFrom = function(array) {\n-  var lastElementValue = arrayLength(array) - 1;\n-  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n-  return array[selectedValue];\n-}\n-                // get length of this array\n-                // get a random number based on length\n-                // pull from the array\n-            \n-            /*\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = [a,b,c,d,e]\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// function for pulling a value at random from an array\n-var getRandomElementFrom = function(array) {\n-  var lastElementValue = arrayLength(array) - 1;\n-  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n-  return array[selectedValue];\n-}\n-                // get length of this array\n-                // get a random number based on length\n-                // pull from the array\n-            \n-            /*\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-var anarray = [a,b,c,d,e]\n-\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-// function for pulling a value at random from an array\n-var getRandomElementFrom = function(array) {\n-  var lastElementValue = arrayLength(array) - 1;\n-  var selectedValue = getRandomNumberFromTo(0, lastElementValue);\n-  return array[selectedValue];\n-}\n-                // get length of this array\n-                // get a random number based on length\n-                // pull from the array\n-            \n-            /*\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.floor(Math.random() * (max - min + 1) + min);\n-  return x;\n-}            \n-\n-            /*\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-// generates random number between two numbers, inclusive\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.random();\n-  return x;\n-}            \n-\n-            /*\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers */\n-var getRandomNumberFromTo = function(min, max) {\n-  var x = Math.random();\n-  return x;\n-}            \n-\n-            /*\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  // fill in required characters first\n-  //   fill in remaining characters using whole list\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword = function() {\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword() {\n-  var generatedPassword = \"this is what we print\";\n-  return generatedPassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-window.alert(\"This is an alert! JavaScript is running!\");\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword() {\n-  var generatedPassword = \"this is what we print\";\n-  return generatePassword;\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-var generatePassword() {\n-  var generatedPassword = \"this is what we print\";\n-  return(generatePassword);\n-}\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-//     display password\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = \"password\"\n-  //generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        \n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-              allowable answers for questions\n-                number of characters\n-                yes or not\n-                at least one of the types of characters\n-        \n-              \n-\n-\n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    lowercase\n-    uppercase\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    \n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-\n-      \n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-//     get criteria\n-//     generate password\n-//     display password\n-  \n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n-/* \t        create array of required\n-            add required into each\n-              Fill remaining spots at random\n-            Scramble\n-            Fill slots sequentially\n-\n-            BASIC UTILITY: generate random number between two numbers\n-            function for pulling from list\n-                get length of this array\n-                get a random number based on length\n-                pull from the array\n-            function for shuffling\n-                set up array to be scrambled\n-                get a random number in length of array\n-                pull out that location in the array\n-                    send out that value\n-                    remove that value from the array\n-            BASIC VAR: arrays of password characters\n-              a-z ; A-Z ; 0-9 ; special characters list\n-            \n-welcome user\n-how long a password\n-    reject bad answers\n-        quit if necessary\n-what are required characters\n-    numbers?\n-        reject bad answers\n-            quit\n-    special characters?\n-        reject\n-            quit\n-generate password\n-    set up parameters\n-        length of password\n-        requirements of password\n-    fill in required characters first\n-    fill in remaining characters using whole list\n-    shuffle the array\n-present password\n-    offer to copy to clipboard\n-ask whether another password is desired\n-    same parameters or different\n-    go back to start\n-    quit\n-\n-var promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n-    if (promptFight === 'skip' || promptFight === 'SKIP') {\n-    \n-var enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n-\n-\n-welcome user\n-while user wants password\n-    if criteria are needed\n-        get criteria\n-    generate password\n-    display password\n-    need another password?\n-good bye user\n-\n-    */\n-\n-\n-\n-// Assignment code here\n-\n-\n-// Get references to the #generate element\n-var generateBtn = document.querySelector(\"#generate\");\n-\n-// Write password to the #password input\n-function writePassword() {\n-  var password = generatePassword();\n-  var passwordText = document.querySelector(\"#password\");\n-\n-  passwordText.value = password;\n-\n-}\n-\n-// Add event listener to generate button\n-generateBtn.addEventListener(\"click\", writePassword);\n"
                }
            ],
            "date": 1637038011201,
            "name": "Commit-0",
            "content": "/* \t        create array of required\n            add required into each\n              Fill remaining spots at random\n            Scramble\n            Fill slots sequentially\n\n            BASIC UTILITY: generate random number between two numbers\n            function for pulling from list\n                get length of this array\n                get a random number based on length\n                pull from the array\n            function for shuffling\n                set up array to be scrambled\n                get a random number in length of array\n                pull out that location in the array\n                    send out that value\n                    remove that value from the array\n            BASIC VAR: arrays of password characters\n              a-z ; A-Z ; 0-9 ; special characters list\n            \nwelcome user\nhow long a password\n    reject bad answers\n        quit if necessary\nwhat are required characters\n    numbers?\n        reject bad answers\n            quit\n    special characters?\n        reject\n            quit\ngenerate password\n    set up parameters\n        length of password\n        requirements of password\n    fill in required characters first\n    fill in remaining characters using whole list\n    shuffle the array\npresent password\n    offer to copy to clipboard\nask whether another password is desired\n    same parameters or different\n    go back to start\n    quit\n\nvar promptFight = window.prompt('Would you like to FIGHT or SKIP this battle? Enter \"FIGHT\" or \"SKIP\" to choose.');\n    if (promptFight === 'skip' || promptFight === 'SKIP') {\n    \nvar enemyNames = ['Roborto', 'Amy Android', 'Robo Trumble'];\n\n\nwelcome user\nwhile user wants password\n    if criteria are needed\n        get criteria\n    generate password\n    display password\n    need another password?\ngood bye user\n\n    */\n\n\n\n// Assignment code here\n\n\n// Get references to the #generate element\nvar generateBtn = document.querySelector(\"#generate\");\n\n// Write password to the #password input\nfunction writePassword() {\n  var password = generatePassword();\n  var passwordText = document.querySelector(\"#password\");\n\n  passwordText.value = password;\n\n}\n\n// Add event listener to generate button\ngenerateBtn.addEventListener(\"click\", writePassword);\n"
        }
    ]
}